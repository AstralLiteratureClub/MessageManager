plugins {
    id 'java'
    id 'maven-publish'

    id("io.freefair.lombok") version "8.10.2"
}

allprojects {
    group = 'bet.astral'
    version = '2.4.1'
}

repositories {
    mavenCentral()

    maven {
        name = "papermc"
        url = uri("https://repo.papermc.io/repository/maven-public/")
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'com.github.AstralLiteratureClub:MoreForJava:-SNAPSHOT'

    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'

    implementation "org.apiguardian:apiguardian-api:1.1.2"

    // Guava
    compileOnly("com.google.guava:guava:32.1.3-jre")
    // Gson
    compileOnly 'com.google.code.gson:gson:2.10.1'

    // message component api
    compileOnly "net.kyori:adventure-api:4.14.0"
    compileOnly "net.kyori:adventure-text-minimessage:4.14.0"
    compileOnly "net.kyori:adventure-text-serializer-legacy:4.14.0"
    compileOnly "net.kyori:adventure-text-serializer-plain:4.14.0"
    compileOnly "net.kyori:adventure-text-serializer-gson:4.14.0"
    compileOnly 'net.kyori:adventure-text-logger-slf4j:4.14.0'

    // Spigot
    implementation("net.kyori:adventure-platform-bukkit:4.3.4")

    // Cloud
    compileOnly("org.incendo:cloud-core:2.0.0-rc.1")
    compileOnly("org.incendo:cloud-minecraft-extras:2.0.0-beta.8")
    compileOnly("org.incendo:cloud-translations-core:1.0.0-beta.2")
    compileOnly("org.incendo:cloud-translations-bukkit:1.0.0-beta.2")
    // Paper
    compileOnly("io.papermc.paper:paper-api:1.21.3-R0.1-SNAPSHOT")
}


java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(21))
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId project.name
            from components.java
        }
    }
}


tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching(['*.yml']) {
        expand([version: version])
    }
}